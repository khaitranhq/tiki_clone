{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/leo/tiki_clone/tiki_fe/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Head, Html, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core';\nexport default class _Document extends Document {\n  static async getInitialProps(ctx) {\n    const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => props => sheets.collect( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 56\n      }, this))\n    });\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      // Styles fragment is rendered after the app and page rendering finish.\n      styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n    });\n    /*const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n     ctx.renderPage = () =>\n      originalRenderPage({\n        enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n      });\n     const initialProps = await Document.getInitialProps(ctx);\n     return {\n      ...initialProps,\n      style: [\n        ...React.Children.toArray(initialProps.styles),\n        sheets.getStyleElement()\n      ]\n    };*/\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(Html, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/leo/tiki_clone/tiki_fe/pages/_document.js"],"names":["React","Document","Head","Html","Main","NextScript","ServerStyleSheets","_Document","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement","render"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,eAAe,MAAMC,SAAN,SAAwBN,QAAxB,CAAiC;AAC9C,eAAaO,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,MAAM,GAAG,IAAIJ,iBAAJ,EAAf;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,IAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,MAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,eAAe,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAf;AADf,KAAD,CADpB;;AAKA,UAAME,YAAY,GAAG,MAAMhB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2CACKQ,YADL;AAEE;AACAC,MAAAA,MAAM,EAAE,CACN,GAAGlB,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CADG,EAENR,MAAM,CAACW,eAAP,EAFM;AAHV;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIG;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAAA,YAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE;AACE,UAAA,GAAG,EAAC,YADN;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD;;AApD6C","sourcesContent":["import React from 'react';\nimport Document, { Head, Html, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core';\n\nexport default class _Document extends Document {\n  static async getInitialProps(ctx) {\n    const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n      });\n\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return {\n      ...initialProps,\n      // Styles fragment is rendered after the app and page rendering finish.\n      styles: [\n        ...React.Children.toArray(initialProps.styles),\n        sheets.getStyleElement()\n      ]\n    };\n    /*const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n      });\n\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return {\n      ...initialProps,\n      style: [\n        ...React.Children.toArray(initialProps.styles),\n        sheets.getStyleElement()\n      ]\n    };*/\n  }\n\n  render() {\n    <Html>\n      <Head>\n        <link\n          rel='stylesheet'\n          href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'\n        />\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}