{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/leo/tiki_clone/tiki_fe/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*import React from 'react';\nimport Document, { Head, Html, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core';\n\nexport default class _Document extends Document {\n  static async getInitialProps(ctx) {\n    const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => {\n      originalRenderPage({\n        enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n      });\n    };\n\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return {\n      ...initialProps,\n      style: [\n        ...React.Children.toArray(initialProps.styles),\n        sheets.getStyleElement()\n      ]\n    };\n  }\n\n  render() {\n    <Html>\n      <Head>\n        <title>tiki</title>\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>;\n  }\n}*/\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../src/utils/theme';\nexport default class MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 54\n    }, this))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["/home/leo/tiki_clone/tiki_fe/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","theme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAC/CQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA,gCAEE;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,GAAG,EAAC,YADN;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAlB8C,C,CAqBjD;AACA;;AACAJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIT,iBAAJ,EAAf;AACA,QAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,eAAe,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAAf;AADf,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMrB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,yCACKQ,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CACN,GAAGvB,KAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CADG,EAENR,MAAM,CAACW,eAAP,EAFM;AAHV;AAQD,CA1CD","sourcesContent":["/*import React from 'react';\nimport Document, { Head, Html, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core';\n\nexport default class _Document extends Document {\n  static async getInitialProps(ctx) {\n    const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => {\n      originalRenderPage({\n        enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n      });\n    };\n\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return {\n      ...initialProps,\n      style: [\n        ...React.Children.toArray(initialProps.styles),\n        sheets.getStyleElement()\n      ]\n    };\n  }\n\n  render() {\n    <Html>\n      <Head>\n        <title>tiki</title>\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>;\n  }\n}*/\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../src/utils/theme';\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang='en'>\n        <Head>\n          {/* PWA primary color */}\n          <meta name='theme-color' content={theme.palette.primary.main} />\n          <link\n            rel='stylesheet'\n            href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [\n      ...React.Children.toArray(initialProps.styles),\n      sheets.getStyleElement()\n    ]\n  };\n};\n"]},"metadata":{},"sourceType":"module"}